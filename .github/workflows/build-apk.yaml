name: Build Android APK
run-name: ${{ github.event.inputs.repository }}:${{ github.event.inputs.taskName }}

on:
  workflow_dispatch:
    inputs:
      repository:
        description: "Git repository URL"
        required: true
        default: "https://github.com/nightscout/AndroidAPS"
      jdkVersion:
        description: "OpenJDK version to use: 21"
        required: false
        default: "21"
      taskName:
        description: "build.gradle task name: assemble[Flavor]Release"
        required: false
        default: "assembleFullRelease"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v2

      # Setup JDK
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ github.event.inputs.jdkVersion }}

      # Decode the Keystore from base64
      - name: Decode Keystore
        run: |
          echo "${{ secrets.SIGNINGKEYBASE64 }}" | base64 --decode > /tmp/keystore.jks
          chmod 600 /tmp/keystore.jks
        working-directory: ./workspace

      # Validate the Keystore (Optional)
      - name: Validate Keystore
        run: |
          keytool -list -v -keystore /tmp/keystore.jks -storepass "${{ secrets.KEYSTOREPASSWORD }}"
        working-directory: ./workspace

      # Clone the project repository
      - name: Clone Project
        run: |
          git clone --recurse-submodules --depth=1 ${{ github.event.inputs.repository }} workspace
          cd workspace
          git show --summary

      # Build the APK and sign it
      - name: Build APK
        working-directory: ./workspace
        run: |
          ./gradlew ${{ github.event.inputs.taskName }} \
            -Pandroid.injected.signing.store.file=/tmp/keystore.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTOREPASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEYSTOREPASSWORD }}

      # Verify the APK Files
      - name: Verify APK Files
        working-directory: ./workspace
        run: |
          ls ./workspace/app/build/outputs/apk || echo "No APKs found."
          ls ./workspace/app/build/outputs/apk/fullRelease || echo "No Full Release APK found."

      # Upload APK artifacts
      - name: Upload APK Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./workspace/app/build/outputs/apk/**/*.apk
          name: apk-archive
          retention-days: 1

      # Cleanup the keystore after use (optional)
      - name: Cleanup Keystore
        run: rm -f /tmp/keystore.jks
